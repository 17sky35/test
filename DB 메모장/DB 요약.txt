---이력서에 CRUD 할수있다 추가 삭제 수정 검색---

DDL
1. CREATE : 테이블이나, 인덱스, 뷰 등 데이터베이스 객체를 생성한다.
2. DROP : 생성된 데이터베이스 객체를 영구 삭제
3. ALTER : 이미 생성된 데이터베이스 객체를 수정
4. TRUNCATE : 테이블의 데이터를 통째로 삭제



DML(DataManipulationLanguage) : 데이터 제어어

SELECT*FROM 테이블; -> 테이블에서 전체 컬럼에 대한 데이터 조회

SELECT 컬럼명1,컬럼명2 FROM 테이블; -> 테이블에서 컬럼1, 컬럼2 에 대한 전체 데이터 조회

WHERE 조건식;
- 원하는 자료를 검색하기 위한 조건절

컬럼명 비교연산자 값(문자,숫자,표현식)

조건식
컬럼명 IS NULL -> 해당 컬럼에 NULL값이 들어가 있는 행을 조회
컬럼명 IS NOT NULL -> 해당 컬럼에 NULL값이 안들어가 있는 행을 조회

AND -> 조건 AND 조건
앞 뒤의 조건을 모두 만족하는 데이터를 조회
OR -> 조건 OR 조건
앞 또는 뒤 조건 중 하나라도 만족하는 데이터를 조회

SQL 연산자
BETWEEN -> 어떤 범위에 대해서 조회 WHERE 컬럼명 BETWEEN A AND B
IN -> 특정 값에 대해 조회 WHERE 컬럼명 IN(값,값,값....)
LIKE -> 특정 문자열을 포함하고 있는 데이터 조회
WHERE 컬럼명 LIKE '형식 % , _ '
WHERE 컬럼명 NOT LIKE '형식 % , _ '



PRIMARY KEY

FOREIGN KEY
CONSTRAINT FAMILY_FK FOREIGN KEY(S_NUMBER) REFERENCES STAFF(S_NUMBER)

--테이블 삭제
DROP TABLE "ORDER";

--컬럼명 변경 
ALTER TABLE EX2_10 RENAME COLUMN col1 TO col11;

--컬럼타입 변경
ALTER TABLE ex2_10 MODIFY col2 NUMBER(5);

--컬럼삭제
-- alter table 테이블명 drop column 컬럼명;
ALTER TABLE EX2_10 DROP COLUMN Create_date;

--컬럼추가
--alter table 테이블명 add 컬럼명 컬럼타입;
ALTER TABLE ex2_10 ADD col3 NUMBER;

--제약조건 추가
--테이블이 생성된 후 제약조건을 추가 or 삭제
--alter table 테이블명 add constraint 제약조건명 제약조건종류(컬럼명);
ALTER TABLE EX2_10 ADD CONSTRAINT pk_ex2_10 PRIMARY key(col11);

--제약조건 삭제
--alter table 테이블명 drop constraint 제약조건명;
ALTER TABLE EX2_10 DROP CONSTRAINT pk_ex2_10;

--제약조건 추가하기
ALTER TABLE TBL_ANIMAL ADD CONSTRAINT ANIMAL_PK PRIMARY key(id);



DML(Data Manipulation Language) : 데이터 조작어

1. SELECT : 데이터의 조회

SELECT 컬럼명1,컬럼명2,컬럼명3,... FROM 테이블명;

SELECT 컬럼명1,컬럼명2,컬럼명3,... FROM 테이블명
WHERE 조건식;

-------------------------------------------------
SQL 연산자
1. BETWEEN : A와 B사이의 값을 조회할 때 사용
컬럼명 BETWEEN A AND B;
2. IN : OR을 대신해 사용하는 연산자
WHERE 컬럼명 IN (2200,3200,5000,6000); 
3. LIKE : 유사검색
% : 모든값
LIKE 'M%' : M으로 시작하는 모든 데이터
LIKE '%M' : M으로 끝나는 모든 데이터
LIKE '%M%' : M을 포함하는 모든데이터
_ : 하나의 값
LIKE 'A_' : A로 시작하는 두글자 짜리 데이터
LIKE '_A_' : A를 두번째 글자로 갖는 세글자 짜리 데이터
LIKE '__A' : A로 끝나는 세글자 짜리 데이터

언더바 자체를 조회하고싶으면 이스케이프문자 '%\_%'를 써야 한다.
-------------------------------------------------

2. INSERT : 데이터의 추가

테이블에 데이터 추가하기

INSERT

INSERT INTO 테이블명(컬럼명1,컬럼명2,.....)VALUES(값1,값2,.....);
DEFAULT값을 넣고싶을 때

INSERT INTO 테이블명 VALUES(값1,값2,.....);
무조건 컬럼의 개수만큼값을 대입해야한다.

다른 테이블의 데이터를 조회해서 추가하기
INSERT INTO 테이블명(컬럼명1,컬럼명2...)
SELECT 컬럼1,컬럼2...
FROM 테이블
WHERE 조건;

각각의 테이블에 데이터를 추가하기
INSERT ALL 
	INTO 테비을A(컴럼1,컬럼2..)VALUES(값1,값2..)
	INTO 테비을B(컴럼3,컬럼4..)VALUES(값3,값4..);
SELECT * FROM DUAL;
DUAL - 가상테이블
SELECT SYSDATE FROM DUAL; 현재 시간 표시


3. UPFATE : 데이터의 수정

수정하기 
UPDATE 
- 테이블의 데이터를 수정할 때 사용하는 키워드
UPDATE 테이블명 SET 
컴럼명 = 새로운값,
컴럼명 = 새로운값,
컴럼명 = 새로운값
WHERE 조건식;
※조건식 달지 않으면 테이블 전체에서 데이터가 수정된다.

4. DELETE : 데이터의 삭제

DELETE 
조건에 맞는 데이터를 테이블에서 삭제
- 행 단위로 지움

DELETE FROM 테이블명
WHERE 조건식 
------------------------------------------------------------------------------------------------------------------------------------------------------
ORDER BY(정렬)
- 질의결과에 반환되는 행들을 특정 기준으로 정렬하고자 할 때 사용
- ORDER BY 절은 SELECT절의 가장 마지막에 기술
- ASC : 오름차순(DEFAULT이기 때문에 생략 가능)
- DESC : 내림차순(생략불가능)


사용방법

FROM 테이블명 ORERBY 컬럼명 정렬방향;

FROM 테이블명 WHERE 조건식 OREDR BY 컬럼명 정렬방향;

FROM 테이블명 WHERE 조건식 OREDR BY 컬럼명 정렬방향, 컬럼명 정렬방향;
------------------------------------------------------------------------------------------------------------------------------------------------------
ASCII()
지정된 문자의 ASCII값을 반환한다.
SELECT ASCII('A') FROM DUAL;

CHR()
지정된 숫자의 ASCII문자를 반환한다.
SELECT CHR(65) FROM DUAL;















