
CREATE TABLE "USER"(
	U_ID VARCHAR2(100) PRIMARY KEY,
	U_PW VARCHAR2(100),
	U_NAME VARCHAR2(200),
	U_ADDRESS VARCHAR2(300),
	U_EMAIL VARCHAR2(300),
	U_BIRTH	DATE
);

CREATE TABLE PRODUCT(
	P_NUM NUMBER PRIMARY KEY,
	P_NAME VARCHAR2(100),
	P_PRICE NUMBER,
	P_COUNT NUMBER
);

CREATE TABLE "ORDER"(
	O_NUM NUMBER PRIMARY KEY,
	O_DATE DATE,
	U_ID VARCHAR2(100),
	P_NUM NUMBER,
	CONSTRAINT USER_FK FOREIGN KEY(U_ID) REFERENCES "USER"(U_ID),
	CONSTRAINT PRODUCT_FK FOREIGN KEY(P_NUM) REFERENCES PRODUCT(P_NUM)
);

DROP TABLE "ORDER";


CREATE TABLE FLOWER(
	F_NAME VARCHAR2(200) PRIMARY KEY,
	F_COLOR VARCHAR2(100),
	F_PRICE NUMBER
);

CREATE TABLE POT(
	P_NUMBER NUMBER PRIMARY KEY,
	P_COLOR VARCHAR2(100),
	P_SHAPE VARCHAR2(200),
	F_NAME VARCHAR2(200),
	CONSTRAINT FLOWER_FK FOREIGN KEY(F_NAME) REFERENCES FLOWER (F_NAME)
);


CREATE TABLE ARTIST(
	A_NAME VARCHAR2(200) PRIMARY KEY,
	A_NATION VARCHAR2(200),
	A_YEAR DATE
);

CREATE TABLE CD(
	CD_TITLE VARCHAR2(100) PRIMARY KEY,
	CD_PRICE NUMBER,
	CD_GENRE VARCHAR2(200),
	CD_LIST VARCHAR2(200),
	A_NAME VARCHAR2(200),
	CONSTRAINT ARTIST_FK FOREIGN KEY(A_NAME) REFERENCES ARTIST(A_NAME)
);

CREATE TABLE TRACK(
	T_TITLE VARCHAR2(100) PRIMARY KEY,
	T_TIME NUMBER,
	CD_TITLE VARCHAR2(100),
	CONSTRAINT CD_FK FOREIGN KEY(CD_TITLE) REFERENCES CD(CD_TITLE)
);


CREATE TABLE DIVISION(
	D_NAME VARCHAR2(200) PRIMARY KEY,
	D_NUMBER NUMBER
);

CREATE TABLE STAFF(
	S_NUMBER NUMBER PRIMARY KEY,
	D_NUMBER NUMBER,
	S_NAME VARCHAR2(200),
	S_POSITION VARCHAR2(200),
	CONSTRAINT STAFF_FK FOREIGN KEY(D_NUMBER) REFERENCES DIVISION(D_NUMBER)
);

CREATE TABLE FAMILY(
	S_NUMBER NUMBER,
	F_NAME VARCHAR2(200),
	F_AGE NUMBER,
	CONSTRAINT FAMILY_FK FOREIGN KEY(S_NUMBER) REFERENCES STAFF(S_NUMBER)
);

CREATE TABLE "RECORD"(
	S_NUMBER NUMBER,
	R_PERIOD NUMBER,
	R_POSITION VARCHAR2(200),
	CONSTRAINT RECORD_FK FOREIGN KEY(S_NUMBER) REFERENCES STAFF(S_NUMBER)
);

SELECT EMPLOYEE_ID,FIRST_NAME FROM EMPLOYEES;
-- 컬럼 조회
SELECT * FROM COLS WHERE TABLE_NAME = 'EMPLOYEES';

-- 사원테이블에서 모든 정보를 조회하세요
SELECT * FROM EMPLOYEES;

-- DEPARTMENTS(부서) 테이블의 모든 정보를 조회하세요
SELECT * FROM DEPARTMENTS;

-- 사원테이블에서 이름, 직종, 급여를 조회해보세요
SELECT FIRST_NAME, JOB_ID, SALARY FROM EMPLOYEES;
-- 컬럼에 실제로 없는 정보도 출력 할 수 있다.
SELECT EMPLOYEE_ID,FIRST_NAME,JOB_ID,SALARY,COMMISSION_PCT,SALARY *COMMISSION_PCT
FROM EMPLOYEES;

-- 사원테이블에서 급여가 10000이상인 사원들의 정보를 사번, 이름, 급여순으로 출력
SELECT EMPLOYEE_ID,FIRST_NAME,SALARY 
FROM EMPLOYEES WHERE SALARY >= 10000;

-- 사원테이블에서 이름이 MICHAEL인 사원의 사번, 이름을 조회
-- 문자열 데이터는 ''넣어서 표현 문자열은 대소문자 정확하게.
SELECT EMPLOYEE_ID ,FIRST_NAME FROM EMPLOYEES
WHERE  FIRST_NAME = 'Michael';

--사원테이블에서 직종이 IT_PROG인 사원들의 정보를 사번,이름,직종,급여 순으로 조회
SELECT EMPLOYEE_ID, FIRST_NAME,JOB_ID,SALARY 
FROM EMPLOYEES WHERE JOB_ID ='IT_PROG';

SELECT EMPLOYEE_ID,FIRST_NAME,SALARY FROM EMPLOYEES 
WHERE SALARY >= 10000 AND SALARY <= 13000;

SELECT EMPLOYEE_ID ,FIRST_NAME,HIRE_DATE FROM EMPLOYEES 
WHERE HIRE_DATE >= '2005-09-21';

SELECT EMPLOYEE_ID,FIRST_NAME,JOB_ID,HIRE_DATE FROM EMPLOYEES 
WHERE HIRE_DATE >= '2006-01-01' AND EMPLOYEES.HIRE_DATE <='2006-12-31';

SELECT * FROM EMPLOYEES WHERE JOB_ID ='SA_MAN' OR JOB_ID ='IT_PROG';

SELECT EMPLOYEE_ID,FIRST_NAME,JOB_ID,SALARY FROM EMPLOYEES 
WHERE SALARY = '2200' OR SALARY = '3200' OR SALARY = '5000' OR
SALARY = '6000';

SELECT EMPLOYEE_ID,FIRST_NAME,JOB_ID,HIRE_DATE FROM EMPLOYEES 
WHERE HIRE_DATE BETWEEN '2006-01-01' AND '2006-12-31';

SELECT EMPLOYEE_ID,FIRST_NAME,JOB_ID,SALARY FROM EMPLOYEES 
WHERE SALARY IN (2200,3200,5000,6000); 

SELECT * FROM EMPLOYEES WHERE JOB_ID NOT IN('SA_MAN','IT_PROG');

-- LIKE 유사검색
-- WHERE 절에서 사용되며 부분적으로 일치하는 속성을 찾을 때 사용된다.
-- % : 모든값
-- _ : 하나의 값

SELECT EMPLOYEE_ID,FIRST_NAME,JOB_ID FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'M%'; 

SELECT EMPLOYEE_ID,FIRST_NAME,JOB_ID FROM EMPLOYEES
WHERE FIRST_NAME LIKE '%d';

SELECT FIRST_NAME,JOB_ID FROM EMPLOYEES
WHERE FIRST_NAME LIKE '%a%' ;

SELECT EMPLOYEE_ID,FIRST_NAME FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'M______' ;

SELECT EMPLOYEE_ID,FIRST_NAME FROM EMPLOYEES
WHERE FIRST_NAME LIKE '__a%';

SELECT FIRST_NAME,SALARY FROM EMPLOYEES
WHERE FIRST_NAME LIKE '%o%a';

SELECT EMPLOYEE_ID,FIRST_NAME FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'H_____%';

SELECT EMPLOYEE_ID,FIRST_NAME FROM EMPLOYEES
WHERE FIRST_NAME NOT LIKE '%s%';

SELECT EMPLOYEE_ID,FIRST_NAME FROM EMPLOYEES
WHERE FIRST_NAME LIKE '%el%' OR FIRST_NAME LIKE '%en%';

-- 언더바 자체를 조회하고싶으면 이스케이프문자 '%\_%'를 써야 한다.





